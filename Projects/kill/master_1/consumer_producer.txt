#include<iostream>
#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
using namespace std;
int buf[10];
sem_t mutex;
sem_t full;
sem_t empty;
int i=0;
void *produce(void*a)
{
sem_wait(&mutex);
buf[i]=i+1;
i++;
sem_post(&mutex);
sem_wait(&empty);
sem_post(&full);
pthread_exit(0);
}
void *consume(void*a)
{
sem_wait(&mutex);
cout<<buf[i-1]<<endl;
i--;
sem_post(&mutex);
sem_wait(&empty);
sem_post(&full);
pthread_exit(0);
}
int main()
{
pthread_t p1,p2;
sem_init(&empty,0,10);
sem_init(&full,0,0);
sem_init(&mutex,0,1);
pthread_create(&p1,NULL,consume,NULL);
pthread_create(&p2,NULL,produce,NULL);
pthread_join(p1,NULL);
pthread_join(p2,NULL);
}